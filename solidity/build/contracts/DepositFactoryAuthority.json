{
  "contractName": "DepositFactoryAuthority",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_factory",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Secured by setting the depositFactory address and using the onlyFactory         modifier on functions requiring restriction.\",\"methods\":{\"initialize(address)\":{\"details\":\"Since this function is not access-controlled, it should be called      transactionally with contract instantiation. In cases where a      regular contract directly inherits from DepositFactoryAuthority,      that should happen in the constructor. In cases where the inheritor      is binstead used via a clone factory, the same function that      creates a new clone should also trigger initialization.\"}},\"title\":\"Deposit Factory Authority\"},\"userdoc\":{\"methods\":{\"initialize(address)\":{\"notice\":\"Set the address of the System contract on contract         initialization.\"}},\"notice\":\"Contract to secure function calls to the Deposit Factory.\"}},\"settings\":{\"compilationTarget\":{\"/home/kowal/Projects/sovryn/tbtc/solidity/contracts/system/DepositFactoryAuthority.sol\":\"DepositFactoryAuthority\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/kowal/Projects/sovryn/tbtc/solidity/contracts/system/DepositFactoryAuthority.sol\":{\"keccak256\":\"0x022479e32c12f6be988fb0d7dfd51038177511b92f02a5b19bb72b0e4f09d851\",\"urls\":[\"bzz-raw://9eeb54aded5ad8073a5e3525c0051b1b6ee891ec097270e4d9271d14c4f19057\",\"dweb:/ipfs/QmVvcwW2jw9zBjdWJdqkBTNfU6K9vMT8EYDwoYF1nxMHXd\"]}},\"version\":1}",
  "bytecode": "0x60806040526000805460ff1916905534801561001a57600080fd5b5061018b8061002a6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063c4d66de814610030575b600080fd5b6100566004803603602081101561004657600080fd5b50356001600160a01b0316610058565b005b6001600160a01b03811661009d5760405162461bcd60e51b815260040180806020018281038252602381526020018061010f6023913960400191505060405180910390fd5b60005460ff16156100df5760405162461bcd60e51b81526004018080602001828103825260258152602001806101326025913960400191505060405180910390fd5b6000805460ff196001600160a01b0390931661010002610100600160a81b03199091161791909116600117905556fe466163746f72792063616e6e6f7420626520746865207a65726f20616464726573732e466163746f72792063616e206f6e6c7920626520696e697469616c697a6564206f6e63652ea265627a7a72315820e6a4bd4d6e46a49838baba67d5804e37bab4f309ac1068080a8e1911613e77ee64736f6c63430005110032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c8063c4d66de814610030575b600080fd5b6100566004803603602081101561004657600080fd5b50356001600160a01b0316610058565b005b6001600160a01b03811661009d5760405162461bcd60e51b815260040180806020018281038252602381526020018061010f6023913960400191505060405180910390fd5b60005460ff16156100df5760405162461bcd60e51b81526004018080602001828103825260258152602001806101326025913960400191505060405180910390fd5b6000805460ff196001600160a01b0390931661010002610100600160a81b03199091161791909116600117905556fe466163746f72792063616e6e6f7420626520746865207a65726f20616464726573732e466163746f72792063616e206f6e6c7920626520696e697469616c697a6564206f6e63652ea265627a7a72315820e6a4bd4d6e46a49838baba67d5804e37bab4f309ac1068080a8e1911613e77ee64736f6c63430005110032",
  "sourceMap": "274:1263:18:-;;;343:5;314:34;;-1:-1:-1;;314:34:18;;;274:1263;5:2:-1;;;;30:1;27;20:12;5:2;274:1263:18;;;;;;;",
  "deployedSourceMap": "274:1263:18:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;274:1263:18;;;;;;;;;;;;;;;;;;;948:272;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;948:272:18;-1:-1:-1;;;;;948:272:18;;:::i;:::-;;;-1:-1:-1;;;;;1011:22:18;;1003:70;;;;-1:-1:-1;;;1003:70:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1093:12;;;;1091:14;1083:64;;;;-1:-1:-1;;;1083:64:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1158:15;:26;;-1:-1:-1;;;;;;;1158:26:18;;;;;-1:-1:-1;;;;;;1158:26:18;;;;1194:19;;;;1158:15;1194:19;;;948:272::o",
  "source": "pragma solidity 0.5.17;\n\n/// @title  Deposit Factory Authority\n/// @notice Contract to secure function calls to the Deposit Factory.\n/// @dev    Secured by setting the depositFactory address and using the onlyFactory\n///         modifier on functions requiring restriction.\ncontract DepositFactoryAuthority {\n\n    bool internal _initialized = false;\n    address internal _depositFactory;\n\n    /// @notice Set the address of the System contract on contract\n    ///         initialization.\n    /// @dev Since this function is not access-controlled, it should be called\n    ///      transactionally with contract instantiation. In cases where a\n    ///      regular contract directly inherits from DepositFactoryAuthority,\n    ///      that should happen in the constructor. In cases where the inheritor\n    ///      is binstead used via a clone factory, the same function that\n    ///      creates a new clone should also trigger initialization.\n    function initialize(address _factory) public {\n        require(_factory != address(0), \"Factory cannot be the zero address.\");\n        require(! _initialized, \"Factory can only be initialized once.\");\n\n        _depositFactory = _factory;\n        _initialized = true;\n    }\n\n    /// @notice Function modifier ensures modified function is only called by set deposit factory.\n    modifier onlyFactory(){\n        require(_initialized, \"Factory initialization must have been called.\");\n        require(msg.sender == _depositFactory, \"Caller must be depositFactory contract\");\n        _;\n    }\n}\n",
  "sourcePath": "/home/kowal/Projects/sovryn/tbtc/solidity/contracts/system/DepositFactoryAuthority.sol",
  "ast": {
    "absolutePath": "/home/kowal/Projects/sovryn/tbtc/solidity/contracts/system/DepositFactoryAuthority.sol",
    "exportedSymbols": {
      "DepositFactoryAuthority": [
        6142
      ]
    },
    "id": 6143,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6090,
        "literals": [
          "solidity",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:18"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title  Deposit Factory Authority\n @notice Contract to secure function calls to the Deposit Factory.\n @dev    Secured by setting the depositFactory address and using the onlyFactory\n         modifier on functions requiring restriction.",
        "fullyImplemented": true,
        "id": 6142,
        "linearizedBaseContracts": [
          6142
        ],
        "name": "DepositFactoryAuthority",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 6093,
            "name": "_initialized",
            "nodeType": "VariableDeclaration",
            "scope": 6142,
            "src": "314:34:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 6091,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "314:4:18",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "66616c7365",
              "id": 6092,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "343:5:18",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 6095,
            "name": "_depositFactory",
            "nodeType": "VariableDeclaration",
            "scope": 6142,
            "src": "354:32:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 6094,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "354:7:18",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 6123,
              "nodeType": "Block",
              "src": "993:227:18",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 6105,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 6101,
                          "name": "_factory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6097,
                          "src": "1011:8:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 6103,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1031:1:18",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 6102,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1023:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 6104,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1023:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1011:22:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "466163746f72792063616e6e6f7420626520746865207a65726f20616464726573732e",
                        "id": 6106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1035:37:18",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2bd3cbc23ffb44d3580484075b016a2d908a32b5541fab8a3134aa94a7c5ffa6",
                          "typeString": "literal_string \"Factory cannot be the zero address.\""
                        },
                        "value": "Factory cannot be the zero address."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2bd3cbc23ffb44d3580484075b016a2d908a32b5541fab8a3134aa94a7c5ffa6",
                          "typeString": "literal_string \"Factory cannot be the zero address.\""
                        }
                      ],
                      "id": 6100,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        18050,
                        18051
                      ],
                      "referencedDeclaration": 18051,
                      "src": "1003:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1003:70:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6108,
                  "nodeType": "ExpressionStatement",
                  "src": "1003:70:18"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 6111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1091:14:18",
                        "subExpression": {
                          "argumentTypes": null,
                          "id": 6110,
                          "name": "_initialized",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6093,
                          "src": "1093:12:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "466163746f72792063616e206f6e6c7920626520696e697469616c697a6564206f6e63652e",
                        "id": 6112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1107:39:18",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ce00edb2a923848081003b8039d197b6044b329e1d83ed238dca317d015c0159",
                          "typeString": "literal_string \"Factory can only be initialized once.\""
                        },
                        "value": "Factory can only be initialized once."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ce00edb2a923848081003b8039d197b6044b329e1d83ed238dca317d015c0159",
                          "typeString": "literal_string \"Factory can only be initialized once.\""
                        }
                      ],
                      "id": 6109,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        18050,
                        18051
                      ],
                      "referencedDeclaration": 18051,
                      "src": "1083:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1083:64:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6114,
                  "nodeType": "ExpressionStatement",
                  "src": "1083:64:18"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 6117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 6115,
                      "name": "_depositFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6095,
                      "src": "1158:15:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 6116,
                      "name": "_factory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6097,
                      "src": "1176:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1158:26:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 6118,
                  "nodeType": "ExpressionStatement",
                  "src": "1158:26:18"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 6121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 6119,
                      "name": "_initialized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6093,
                      "src": "1194:12:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 6120,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1209:4:18",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1194:19:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6122,
                  "nodeType": "ExpressionStatement",
                  "src": "1194:19:18"
                }
              ]
            },
            "documentation": "@notice Set the address of the System contract on contract\n         initialization.\n @dev Since this function is not access-controlled, it should be called\n      transactionally with contract instantiation. In cases where a\n      regular contract directly inherits from DepositFactoryAuthority,\n      that should happen in the constructor. In cases where the inheritor\n      is binstead used via a clone factory, the same function that\n      creates a new clone should also trigger initialization.",
            "id": 6124,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6098,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6097,
                  "name": "_factory",
                  "nodeType": "VariableDeclaration",
                  "scope": 6124,
                  "src": "968:16:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6096,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "968:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "967:18:18"
            },
            "returnParameters": {
              "id": 6099,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "993:0:18"
            },
            "scope": 6142,
            "src": "948:272:18",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6140,
              "nodeType": "Block",
              "src": "1347:188:18",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 6127,
                        "name": "_initialized",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6093,
                        "src": "1365:12:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "466163746f727920696e697469616c697a6174696f6e206d7573742068617665206265656e2063616c6c65642e",
                        "id": 6128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1379:47:18",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ec839c8c5c6b5e827d48fd88aa465bf1aeb67fc299bceed306c2fedd287c2af1",
                          "typeString": "literal_string \"Factory initialization must have been called.\""
                        },
                        "value": "Factory initialization must have been called."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ec839c8c5c6b5e827d48fd88aa465bf1aeb67fc299bceed306c2fedd287c2af1",
                          "typeString": "literal_string \"Factory initialization must have been called.\""
                        }
                      ],
                      "id": 6126,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        18050,
                        18051
                      ],
                      "referencedDeclaration": 18051,
                      "src": "1357:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1357:70:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6130,
                  "nodeType": "ExpressionStatement",
                  "src": "1357:70:18"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 6135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 6132,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18047,
                            "src": "1445:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 6133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1445:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 6134,
                          "name": "_depositFactory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6095,
                          "src": "1459:15:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1445:29:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "43616c6c6572206d757374206265206465706f736974466163746f727920636f6e7472616374",
                        "id": 6136,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1476:40:18",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e0ecc7208047a6683867d6b9737c2935cc89cb774fe5f25ab7ade7c78861ee44",
                          "typeString": "literal_string \"Caller must be depositFactory contract\""
                        },
                        "value": "Caller must be depositFactory contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e0ecc7208047a6683867d6b9737c2935cc89cb774fe5f25ab7ade7c78861ee44",
                          "typeString": "literal_string \"Caller must be depositFactory contract\""
                        }
                      ],
                      "id": 6131,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        18050,
                        18051
                      ],
                      "referencedDeclaration": 18051,
                      "src": "1437:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1437:80:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6138,
                  "nodeType": "ExpressionStatement",
                  "src": "1437:80:18"
                },
                {
                  "id": 6139,
                  "nodeType": "PlaceholderStatement",
                  "src": "1527:1:18"
                }
              ]
            },
            "documentation": "@notice Function modifier ensures modified function is only called by set deposit factory.",
            "id": 6141,
            "name": "onlyFactory",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 6125,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1345:2:18"
            },
            "src": "1325:210:18",
            "visibility": "internal"
          }
        ],
        "scope": 6143,
        "src": "274:1263:18"
      }
    ],
    "src": "0:1538:18"
  },
  "legacyAST": {
    "absolutePath": "/home/kowal/Projects/sovryn/tbtc/solidity/contracts/system/DepositFactoryAuthority.sol",
    "exportedSymbols": {
      "DepositFactoryAuthority": [
        6142
      ]
    },
    "id": 6143,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6090,
        "literals": [
          "solidity",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:18"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title  Deposit Factory Authority\n @notice Contract to secure function calls to the Deposit Factory.\n @dev    Secured by setting the depositFactory address and using the onlyFactory\n         modifier on functions requiring restriction.",
        "fullyImplemented": true,
        "id": 6142,
        "linearizedBaseContracts": [
          6142
        ],
        "name": "DepositFactoryAuthority",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 6093,
            "name": "_initialized",
            "nodeType": "VariableDeclaration",
            "scope": 6142,
            "src": "314:34:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 6091,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "314:4:18",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "66616c7365",
              "id": 6092,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "343:5:18",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 6095,
            "name": "_depositFactory",
            "nodeType": "VariableDeclaration",
            "scope": 6142,
            "src": "354:32:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 6094,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "354:7:18",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 6123,
              "nodeType": "Block",
              "src": "993:227:18",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 6105,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 6101,
                          "name": "_factory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6097,
                          "src": "1011:8:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 6103,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1031:1:18",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 6102,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1023:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 6104,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1023:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1011:22:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "466163746f72792063616e6e6f7420626520746865207a65726f20616464726573732e",
                        "id": 6106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1035:37:18",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2bd3cbc23ffb44d3580484075b016a2d908a32b5541fab8a3134aa94a7c5ffa6",
                          "typeString": "literal_string \"Factory cannot be the zero address.\""
                        },
                        "value": "Factory cannot be the zero address."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2bd3cbc23ffb44d3580484075b016a2d908a32b5541fab8a3134aa94a7c5ffa6",
                          "typeString": "literal_string \"Factory cannot be the zero address.\""
                        }
                      ],
                      "id": 6100,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        18050,
                        18051
                      ],
                      "referencedDeclaration": 18051,
                      "src": "1003:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1003:70:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6108,
                  "nodeType": "ExpressionStatement",
                  "src": "1003:70:18"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 6111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1091:14:18",
                        "subExpression": {
                          "argumentTypes": null,
                          "id": 6110,
                          "name": "_initialized",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6093,
                          "src": "1093:12:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "466163746f72792063616e206f6e6c7920626520696e697469616c697a6564206f6e63652e",
                        "id": 6112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1107:39:18",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ce00edb2a923848081003b8039d197b6044b329e1d83ed238dca317d015c0159",
                          "typeString": "literal_string \"Factory can only be initialized once.\""
                        },
                        "value": "Factory can only be initialized once."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ce00edb2a923848081003b8039d197b6044b329e1d83ed238dca317d015c0159",
                          "typeString": "literal_string \"Factory can only be initialized once.\""
                        }
                      ],
                      "id": 6109,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        18050,
                        18051
                      ],
                      "referencedDeclaration": 18051,
                      "src": "1083:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1083:64:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6114,
                  "nodeType": "ExpressionStatement",
                  "src": "1083:64:18"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 6117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 6115,
                      "name": "_depositFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6095,
                      "src": "1158:15:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 6116,
                      "name": "_factory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6097,
                      "src": "1176:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1158:26:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 6118,
                  "nodeType": "ExpressionStatement",
                  "src": "1158:26:18"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 6121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 6119,
                      "name": "_initialized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6093,
                      "src": "1194:12:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 6120,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1209:4:18",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1194:19:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6122,
                  "nodeType": "ExpressionStatement",
                  "src": "1194:19:18"
                }
              ]
            },
            "documentation": "@notice Set the address of the System contract on contract\n         initialization.\n @dev Since this function is not access-controlled, it should be called\n      transactionally with contract instantiation. In cases where a\n      regular contract directly inherits from DepositFactoryAuthority,\n      that should happen in the constructor. In cases where the inheritor\n      is binstead used via a clone factory, the same function that\n      creates a new clone should also trigger initialization.",
            "id": 6124,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6098,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6097,
                  "name": "_factory",
                  "nodeType": "VariableDeclaration",
                  "scope": 6124,
                  "src": "968:16:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6096,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "968:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "967:18:18"
            },
            "returnParameters": {
              "id": 6099,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "993:0:18"
            },
            "scope": 6142,
            "src": "948:272:18",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6140,
              "nodeType": "Block",
              "src": "1347:188:18",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 6127,
                        "name": "_initialized",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6093,
                        "src": "1365:12:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "466163746f727920696e697469616c697a6174696f6e206d7573742068617665206265656e2063616c6c65642e",
                        "id": 6128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1379:47:18",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ec839c8c5c6b5e827d48fd88aa465bf1aeb67fc299bceed306c2fedd287c2af1",
                          "typeString": "literal_string \"Factory initialization must have been called.\""
                        },
                        "value": "Factory initialization must have been called."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ec839c8c5c6b5e827d48fd88aa465bf1aeb67fc299bceed306c2fedd287c2af1",
                          "typeString": "literal_string \"Factory initialization must have been called.\""
                        }
                      ],
                      "id": 6126,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        18050,
                        18051
                      ],
                      "referencedDeclaration": 18051,
                      "src": "1357:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1357:70:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6130,
                  "nodeType": "ExpressionStatement",
                  "src": "1357:70:18"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 6135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 6132,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18047,
                            "src": "1445:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 6133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1445:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 6134,
                          "name": "_depositFactory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6095,
                          "src": "1459:15:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1445:29:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "43616c6c6572206d757374206265206465706f736974466163746f727920636f6e7472616374",
                        "id": 6136,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1476:40:18",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e0ecc7208047a6683867d6b9737c2935cc89cb774fe5f25ab7ade7c78861ee44",
                          "typeString": "literal_string \"Caller must be depositFactory contract\""
                        },
                        "value": "Caller must be depositFactory contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e0ecc7208047a6683867d6b9737c2935cc89cb774fe5f25ab7ade7c78861ee44",
                          "typeString": "literal_string \"Caller must be depositFactory contract\""
                        }
                      ],
                      "id": 6131,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        18050,
                        18051
                      ],
                      "referencedDeclaration": 18051,
                      "src": "1437:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1437:80:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6138,
                  "nodeType": "ExpressionStatement",
                  "src": "1437:80:18"
                },
                {
                  "id": 6139,
                  "nodeType": "PlaceholderStatement",
                  "src": "1527:1:18"
                }
              ]
            },
            "documentation": "@notice Function modifier ensures modified function is only called by set deposit factory.",
            "id": 6141,
            "name": "onlyFactory",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 6125,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1345:2:18"
            },
            "src": "1325:210:18",
            "visibility": "internal"
          }
        ],
        "scope": 6143,
        "src": "274:1263:18"
      }
    ],
    "src": "0:1538:18"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.17+commit.d19bba13.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.23",
  "updatedAt": "2021-02-01T14:28:06.519Z",
  "devdoc": {
    "details": "Secured by setting the depositFactory address and using the onlyFactory         modifier on functions requiring restriction.",
    "methods": {
      "initialize(address)": {
        "details": "Since this function is not access-controlled, it should be called      transactionally with contract instantiation. In cases where a      regular contract directly inherits from DepositFactoryAuthority,      that should happen in the constructor. In cases where the inheritor      is binstead used via a clone factory, the same function that      creates a new clone should also trigger initialization."
      }
    },
    "title": "Deposit Factory Authority"
  },
  "userdoc": {
    "methods": {
      "initialize(address)": {
        "notice": "Set the address of the System contract on contract         initialization."
      }
    },
    "notice": "Contract to secure function calls to the Deposit Factory."
  }
}