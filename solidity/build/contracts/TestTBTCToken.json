{
  "contractName": "TestTBTCToken",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vendingMachine",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "contract ITokenRecipient",
          "name": "_spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "approveAndCall",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "forceMint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "forceBurn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "zeroBalance",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_newBalance",
          "type": "uint256"
        }
      ],
      "name": "resetBalance",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_newAllowance",
          "type": "uint256"
        }
      ],
      "name": "resetAllowance",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vendingMachine\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"contract ITokenRecipient\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"forceBurn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"forceMint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_newAllowance\",\"type\":\"uint256\"}],\"name\":\"resetAllowance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newBalance\",\"type\":\"uint256\"}],\"name\":\"resetBalance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"zeroBalance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"See `IERC20.allowance`.\"},\"approve(address,uint256)\":{\"details\":\"See `IERC20.approve`.     * Requirements:     * - `spender` cannot be the zero address.\"},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"The `_spender` should implement the `ITokenRecipient`                   interface to receive approval notifications.\",\"params\":{\"_extraData\":\"Extra information to send to the approved contract.\",\"_spender\":\"Address of contract authorized to spend.\",\"_value\":\"The max amount they can spend.\"},\"return\":\"true if the `_spender` was successfully approved and acted on         the approval, false (or revert) otherwise.\"},\"balanceOf(address)\":{\"details\":\"See `IERC20.balanceOf`.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from `msg.sender`, reducing the total supply.\",\"params\":{\"_amount\":\"The amount of tokens that will be burnt.\"}},\"burnFrom(address,uint256)\":{\"details\":\"Burns an amount of the token from the given account's balance.                  deducting from the sender's allowance for said account.                  Uses the internal _burn function.\",\"params\":{\"_account\":\"The account whose tokens will be burnt.\",\"_amount\":\"The amount of tokens that will be burnt.\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.     * > Note that this information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including `IERC20.balanceOf` and `IERC20.transfer`.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"forceBurn(address,uint256)\":{\"details\":\"We can't call TBTCToken burn function from deposit Test becuase of ACL.                  This function bypasses ACL and can be called in Deposit tests.                  Burns an amount of the token of a given account                  deducting from the sender's allowance for said account.                  Bypasses ACL and can be called in Deposit tests\",\"params\":{\"_account\":\"The account whose tokens will be burnt.\",\"_amount\":\"The amount of tokens that will be burnt.\"}},\"forceMint(address,uint256)\":{\"details\":\"We can't call TBTCToken mint function from deposit Test becuase of ACL.                  This function bypasses ACL and can be called in Deposit tests                  Mints an amount of the token and assigns it to an account.                  Uses the internal _mint function.\",\"params\":{\"_account\":\"The account that will receive the created tokens.\",\"_amount\":\"The amount of tokens that will be created.\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address.\"},\"mint(address,uint256)\":{\"details\":\"Mints an amount of the token and assigns it to an account.                  Uses the internal _mint function.\",\"params\":{\"_account\":\"The account that will receive the created tokens.\",\"_amount\":\"The amount of tokens that will be created.\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"resetAllowance(address,uint256)\":{\"details\":\"Uses exposed token functions to reset the allowance                        of a given account.\",\"params\":{\"_newAllowance\":\"New allowance to assign.\",\"_spender\":\"The allowed account.\"}},\"resetBalance(uint256)\":{\"details\":\"Uses exposed token functions to reset caller's balance.\",\"params\":{\"_newBalance\":\"New balance to assign to caller\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See `IERC20.totalSupply`.\"},\"transfer(address,uint256)\":{\"details\":\"See `IERC20.transfer`.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See `IERC20.transferFrom`.     * Emits an `Approval` event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of `ERC20`;     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `value`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"},\"zeroBalance()\":{\"details\":\"Zeros out the balance of the calling address.                     Does nothing if address has zero balance.\"}}},\"userdoc\":{\"methods\":{\"approveAndCall(address,uint256,bytes)\":{\"notice\":\"Set allowance for other address and notify.                   Allows `_spender` to spend no more than `_value`                   tokens on your behalf and then ping the contract about                   it.\"}}}},\"settings\":{\"compilationTarget\":{\"/home/kowal/Projects/sovryn/tbtc/solidity/contracts/test/system/TestTBTCToken.sol\":\"TestTBTCToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/kowal/Projects/sovryn/tbtc/solidity/contracts/interfaces/ITokenRecipient.sol\":{\"keccak256\":\"0x4ac6830ad44d0b0d70ebabc60150e9c915c7c0bd0129ef868d5d2cd8da0c32bd\",\"urls\":[\"bzz-raw://a5c6465285add41f07a951f90405800a8802e323ea11e9c7bdb5625ce109c7f7\",\"dweb:/ipfs/QmRf7B4WxsS7gbSwUotgQM633BQc2ye7rhYC1RNVFamBfp\"]},\"/home/kowal/Projects/sovryn/tbtc/solidity/contracts/system/TBTCToken.sol\":{\"keccak256\":\"0xeb02cb2492f35f0edbc913dc074db23497dfbaba065b46d52e1dba0f4b72054b\",\"urls\":[\"bzz-raw://2a99f79eef217e086fd28614d8e95030a7da8c9bfaf5679a9461b0cdc1179f1d\",\"dweb:/ipfs/Qmdv9u2x3C5yynx97dtgeW9PtJS8adikMkQJDCoGw3AYTJ\"]},\"/home/kowal/Projects/sovryn/tbtc/solidity/contracts/system/VendingMachineAuthority.sol\":{\"keccak256\":\"0xdc58e152bd6e4649e403970257791f2c01295d616b4a26f333604a2f69a18287\",\"urls\":[\"bzz-raw://ca421ef0e6bb73e11faaed675c16d670ba61fec3a3ad96f6e1739e6f6f69bb3d\",\"dweb:/ipfs/QmVbdwJCzLrcUFUzBQ5KiW86aFotawMGm3bqoopZjYaY7p\"]},\"/home/kowal/Projects/sovryn/tbtc/solidity/contracts/test/system/TestTBTCToken.sol\":{\"keccak256\":\"0xee4e7a620b4195ad090207272b849baed256c070ad210977fd3af70664a5fd0f\",\"urls\":[\"bzz-raw://65560ed1e0f1f196b0c9fa22d882ad8aca55df6a1b8fd362056ac98d9efeafca\",\"dweb:/ipfs/QmZSY2juTKoeS72VEGPis4wqdBRthqyGAWhRLEsJz7AZEq\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x4ccf2d7b51873db1ccfd54ca2adae5eac3b184f9699911ed4490438419f1c690\",\"urls\":[\"bzz-raw://d62d769b2219d5de39013093412623e624fa887f871826ea3bae6052ee893610\",\"dweb:/ipfs/QmV3yVktya1s617QmuzQR2CfuJgUi3dR2xEZY9ecmqZ2G1\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x852793a3c2f86d336a683b30d688ec3dcfc57451af5a2bf5975cda3b7191a901\",\"urls\":[\"bzz-raw://4f5b57664069671648fb81f55b0082faecdf1b2f159eec6b1fa6cef9b7d73bc5\",\"dweb:/ipfs/QmcyytaLs7zFdb4Uu7C5PmQRhQdB3wA3fUdkV6mkYfdDFH\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol\":{\"keccak256\":\"0xc61b3603089b09a730d8ca72e9133a496cc4405da40e9b87c12f073245d774bf\",\"urls\":[\"bzz-raw://de8bb0003d53de236913f0e0102e7a9d015e02098f2495edd000f207fe2be2f4\",\"dweb:/ipfs/QmbtwNwAJEehWWL7yGGyyMoenQvcqtz91pqLgQPpLRoLYC\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x90e8c2521653bbb1768b05889c5760031e688d9cd361f167489b89215e201b95\",\"urls\":[\"bzz-raw://d0abb99bb8bfc2bc0a89902b8ed1dc0442ad08cc78cee64c291b3df6a27bcccc\",\"dweb:/ipfs/QmP5NaEwZthQeM2ESz4WTT3osrP7jhbvu7ocbttBi2JAw6\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051620010df380380620010df8339818101604052602081101561003557600080fd5b50516040805180820182526004808252637442544360e01b60208381019182528451808601909552918452635442544360e01b9184019190915281518493849392909160129161008891600091906100db565b50815161009c9060019060208501906100db565b506002805460ff191660ff929092169190911790555050600680546001600160a01b0319166001600160a01b0392909216919091179055506101769050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061011c57805160ff1916838001178555610149565b82800160010185558215610149579182015b8281111561014957825182559160200191906001019061012e565b50610155929150610159565b5090565b61017391905b80821115610155576000815560010161015f565b90565b610f5980620001866000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c80636a9d5c84116100ad578063a9059cbb11610071578063a9059cbb146103b9578063c27b7a24146103e5578063cae9ca5114610402578063dd62ed3e146104bd578063e2d6f634146104eb5761012c565b80636a9d5c841461030757806370a082311461033357806379cc67901461035957806395d89b4114610385578063a457c2d71461038d5761012c565b806339509351116100f4578063395093511461025c57806340899d651461028857806340c10f19146102b657806342966c68146102e25780634ed9af4c146102ff5761012c565b806306fdde0314610131578063095ea7b3146101ae57806318160ddd146101ee57806323b872dd14610208578063313ce5671461023e575b600080fd5b610139610517565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561017357818101518382015260200161015b565b50505050905090810190601f1680156101a05780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101da600480360360408110156101c457600080fd5b506001600160a01b0381351690602001356105ad565b604080519115158252519081900360200190f35b6101f66105c3565b60408051918252519081900360200190f35b6101da6004803603606081101561021e57600080fd5b506001600160a01b038135811691602081013590911690604001356105c9565b610246610621565b6040805160ff9092168252519081900360200190f35b6101da6004803603604081101561027257600080fd5b506001600160a01b03813516906020013561062a565b6102b46004803603604081101561029e57600080fd5b506001600160a01b038135169060200135610666565b005b6101da600480360360408110156102cc57600080fd5b506001600160a01b038135169060200135610696565b6102b4600480360360208110156102f857600080fd5b50356106ec565b6102b46106f9565b6101da6004803603604081101561031d57600080fd5b506001600160a01b038135169060200135610716565b6101f66004803603602081101561034957600080fd5b50356001600160a01b0316610722565b6102b46004803603604081101561036f57600080fd5b506001600160a01b03813516906020013561073d565b61013961074b565b6101da600480360360408110156103a357600080fd5b506001600160a01b0381351690602001356107ab565b6101da600480360360408110156103cf57600080fd5b506001600160a01b0381351690602001356107e7565b6102b4600480360360208110156103fb57600080fd5b50356107f4565b6101da6004803603606081101561041857600080fd5b6001600160a01b038235169160208101359181019060608101604082013564010000000081111561044857600080fd5b82018360208201111561045a57600080fd5b8035906020019184600183028401116401000000008311171561047c57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610820945050505050565b6101f6600480360360408110156104d357600080fd5b506001600160a01b0381358116916020013516610925565b6102b46004803603604081101561050157600080fd5b506001600160a01b038135169060200135610950565b60008054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156105a35780601f10610578576101008083540402835291602001916105a3565b820191906000526020600020905b81548152906001019060200180831161058657829003601f168201915b5050505050905090565b60006105ba33848461095a565b50600192915050565b60055490565b60006105d6848484610a46565b6001600160a01b038416600090815260046020908152604080832033808552925290912054610616918691610611908663ffffffff610b8a16565b61095a565b5060015b9392505050565b60025460ff1690565b3360008181526004602090815260408083206001600160a01b038716845290915281205490916105ba918590610611908663ffffffff610be716565b60006106723384610925565b905080156106865761068483826107ab565b505b61069083836105ad565b50505050565b6006546000906001600160a01b031633146106e25760405162461bcd60e51b8152600401808060200182810382526022815260200180610e546022913960400191505060405180910390fd5b6105ba8383610c41565b6106f63382610d33565b50565b600061070433610722565b905080156106f6576106f63382610d33565b60006105ba8383610c41565b6001600160a01b031660009081526003602052604090205490565b6107478282610e0e565b5050565b60018054604080516020601f600260001961010087891615020190951694909404938401819004810282018101909252828152606093909290918301828280156105a35780601f10610578576101008083540402835291602001916105a3565b3360008181526004602090815260408083206001600160a01b038716845290915281205490916105ba918590610611908663ffffffff610b8a16565b60006105ba338484610a46565b60006107ff33610722565b90508015610811576108113382610950565b61081b3383610716565b505050565b600061082c84846105ad565b1561091b57604051638f4ffcb160e01b815233600482018181526024830186905230604484018190526080606485019081528651608486015286516001600160a01b038a1695638f4ffcb195948a94938a939192909160a490910190602085019080838360005b838110156108ab578181015183820152602001610893565b50505050905090810190601f1680156108d85780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b1580156108fa57600080fd5b505af115801561090e573d6000803e3d6000fd5b505050506001905061061a565b5060009392505050565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205490565b6107478282610d33565b6001600160a01b03831661099f5760405162461bcd60e51b8152600401808060200182810382526024815260200180610f016024913960400191505060405180910390fd5b6001600160a01b0382166109e45760405162461bcd60e51b8152600401808060200182810382526022815260200180610e996022913960400191505060405180910390fd5b6001600160a01b03808416600081815260046020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038316610a8b5760405162461bcd60e51b8152600401808060200182810382526025815260200180610edc6025913960400191505060405180910390fd5b6001600160a01b038216610ad05760405162461bcd60e51b8152600401808060200182810382526023815260200180610e766023913960400191505060405180910390fd5b6001600160a01b038316600090815260036020526040902054610af9908263ffffffff610b8a16565b6001600160a01b038085166000908152600360205260408082209390935590841681522054610b2e908263ffffffff610be716565b6001600160a01b0380841660008181526003602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600082821115610be1576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b60008282018381101561061a576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6001600160a01b038216610c9c576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b600554610caf908263ffffffff610be716565b6005556001600160a01b038216600090815260036020526040902054610cdb908263ffffffff610be716565b6001600160a01b03831660008181526003602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6001600160a01b038216610d785760405162461bcd60e51b8152600401808060200182810382526021815260200180610ebb6021913960400191505060405180910390fd5b600554610d8b908263ffffffff610b8a16565b6005556001600160a01b038216600090815260036020526040902054610db7908263ffffffff610b8a16565b6001600160a01b0383166000818152600360209081526040808320949094558351858152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a35050565b610e188282610d33565b6001600160a01b038216600090815260046020908152604080832033808552925290912054610747918491610611908563ffffffff610b8a1656fe63616c6c6572206d757374206265207468652076656e64696e67206d616368696e6545524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373a265627a7a723158202734c68a101d4eb57fd7125b2516d4b28cfc18b47bd3469598b74ac3244d3cb364736f6c63430005110032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061012c5760003560e01c80636a9d5c84116100ad578063a9059cbb11610071578063a9059cbb146103b9578063c27b7a24146103e5578063cae9ca5114610402578063dd62ed3e146104bd578063e2d6f634146104eb5761012c565b80636a9d5c841461030757806370a082311461033357806379cc67901461035957806395d89b4114610385578063a457c2d71461038d5761012c565b806339509351116100f4578063395093511461025c57806340899d651461028857806340c10f19146102b657806342966c68146102e25780634ed9af4c146102ff5761012c565b806306fdde0314610131578063095ea7b3146101ae57806318160ddd146101ee57806323b872dd14610208578063313ce5671461023e575b600080fd5b610139610517565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561017357818101518382015260200161015b565b50505050905090810190601f1680156101a05780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101da600480360360408110156101c457600080fd5b506001600160a01b0381351690602001356105ad565b604080519115158252519081900360200190f35b6101f66105c3565b60408051918252519081900360200190f35b6101da6004803603606081101561021e57600080fd5b506001600160a01b038135811691602081013590911690604001356105c9565b610246610621565b6040805160ff9092168252519081900360200190f35b6101da6004803603604081101561027257600080fd5b506001600160a01b03813516906020013561062a565b6102b46004803603604081101561029e57600080fd5b506001600160a01b038135169060200135610666565b005b6101da600480360360408110156102cc57600080fd5b506001600160a01b038135169060200135610696565b6102b4600480360360208110156102f857600080fd5b50356106ec565b6102b46106f9565b6101da6004803603604081101561031d57600080fd5b506001600160a01b038135169060200135610716565b6101f66004803603602081101561034957600080fd5b50356001600160a01b0316610722565b6102b46004803603604081101561036f57600080fd5b506001600160a01b03813516906020013561073d565b61013961074b565b6101da600480360360408110156103a357600080fd5b506001600160a01b0381351690602001356107ab565b6101da600480360360408110156103cf57600080fd5b506001600160a01b0381351690602001356107e7565b6102b4600480360360208110156103fb57600080fd5b50356107f4565b6101da6004803603606081101561041857600080fd5b6001600160a01b038235169160208101359181019060608101604082013564010000000081111561044857600080fd5b82018360208201111561045a57600080fd5b8035906020019184600183028401116401000000008311171561047c57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610820945050505050565b6101f6600480360360408110156104d357600080fd5b506001600160a01b0381358116916020013516610925565b6102b46004803603604081101561050157600080fd5b506001600160a01b038135169060200135610950565b60008054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156105a35780601f10610578576101008083540402835291602001916105a3565b820191906000526020600020905b81548152906001019060200180831161058657829003601f168201915b5050505050905090565b60006105ba33848461095a565b50600192915050565b60055490565b60006105d6848484610a46565b6001600160a01b038416600090815260046020908152604080832033808552925290912054610616918691610611908663ffffffff610b8a16565b61095a565b5060015b9392505050565b60025460ff1690565b3360008181526004602090815260408083206001600160a01b038716845290915281205490916105ba918590610611908663ffffffff610be716565b60006106723384610925565b905080156106865761068483826107ab565b505b61069083836105ad565b50505050565b6006546000906001600160a01b031633146106e25760405162461bcd60e51b8152600401808060200182810382526022815260200180610e546022913960400191505060405180910390fd5b6105ba8383610c41565b6106f63382610d33565b50565b600061070433610722565b905080156106f6576106f63382610d33565b60006105ba8383610c41565b6001600160a01b031660009081526003602052604090205490565b6107478282610e0e565b5050565b60018054604080516020601f600260001961010087891615020190951694909404938401819004810282018101909252828152606093909290918301828280156105a35780601f10610578576101008083540402835291602001916105a3565b3360008181526004602090815260408083206001600160a01b038716845290915281205490916105ba918590610611908663ffffffff610b8a16565b60006105ba338484610a46565b60006107ff33610722565b90508015610811576108113382610950565b61081b3383610716565b505050565b600061082c84846105ad565b1561091b57604051638f4ffcb160e01b815233600482018181526024830186905230604484018190526080606485019081528651608486015286516001600160a01b038a1695638f4ffcb195948a94938a939192909160a490910190602085019080838360005b838110156108ab578181015183820152602001610893565b50505050905090810190601f1680156108d85780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b1580156108fa57600080fd5b505af115801561090e573d6000803e3d6000fd5b505050506001905061061a565b5060009392505050565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205490565b6107478282610d33565b6001600160a01b03831661099f5760405162461bcd60e51b8152600401808060200182810382526024815260200180610f016024913960400191505060405180910390fd5b6001600160a01b0382166109e45760405162461bcd60e51b8152600401808060200182810382526022815260200180610e996022913960400191505060405180910390fd5b6001600160a01b03808416600081815260046020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038316610a8b5760405162461bcd60e51b8152600401808060200182810382526025815260200180610edc6025913960400191505060405180910390fd5b6001600160a01b038216610ad05760405162461bcd60e51b8152600401808060200182810382526023815260200180610e766023913960400191505060405180910390fd5b6001600160a01b038316600090815260036020526040902054610af9908263ffffffff610b8a16565b6001600160a01b038085166000908152600360205260408082209390935590841681522054610b2e908263ffffffff610be716565b6001600160a01b0380841660008181526003602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600082821115610be1576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b60008282018381101561061a576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6001600160a01b038216610c9c576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b600554610caf908263ffffffff610be716565b6005556001600160a01b038216600090815260036020526040902054610cdb908263ffffffff610be716565b6001600160a01b03831660008181526003602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6001600160a01b038216610d785760405162461bcd60e51b8152600401808060200182810382526021815260200180610ebb6021913960400191505060405180910390fd5b600554610d8b908263ffffffff610b8a16565b6005556001600160a01b038216600090815260036020526040902054610db7908263ffffffff610b8a16565b6001600160a01b0383166000818152600360209081526040808320949094558351858152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a35050565b610e188282610d33565b6001600160a01b038216600090815260046020908152604080832033808552925290912054610747918491610611908563ffffffff610b8a1656fe63616c6c6572206d757374206265207468652076656e64696e67206d616368696e6545524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373a265627a7a723158202734c68a101d4eb57fd7125b2516d4b28cfc18b47bd3469598b74ac3244d3cb364736f6c63430005110032",
  "sourceMap": "212:2921:43:-;;;254:146;8:9:-1;5:2;;;30:1;27;20:12;5:2;254:146:43;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;254:146:43;416:163:61;;;;;;;;;;;;-1:-1:-1;;;254:146:43;416:163:61;;;;;;;;;;;;;;;;;-1:-1:-1;;;416:163:61;;;;;;;504:12;;254:146:43;;;;416:163:61;;;769:2:26;;504:12:61;;-1:-1:-1;;416:163:61;504:12;:::i;:::-;-1:-1:-1;526:16:61;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;552:9:61;:20;;-1:-1:-1;;552:20:61;;;;;;;;;;;;-1:-1:-1;;413:14:28;:32;;-1:-1:-1;;;;;;413:32:28;-1:-1:-1;;;;;413:32:28;;;;;;;;;;-1:-1:-1;212:2921:43;;-1:-1:-1;212:2921:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;212:2921:43;;;-1:-1:-1;212:2921:43;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "212:2921:43:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;212:2921:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;644:81:61;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;644:81:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2453:145:60;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2453:145:60;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;1514:89;;;:::i;:::-;;;;;;;;;;;;;;;;3055:252;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3055:252:60;;;;;;;;;;;;;;;;;:::i;1478:81:61:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3702:203:60;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3702:203:60;;;;;;;;:::i;2838:293:43:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2838:293:43;;;;;;;;:::i;:::-;;1188:345:26;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1188:345:26;;;;;;;;:::i;2169:83::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2169:83:26;;:::i;2007:183:43:-;;;:::i;876:204::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;876:204:43;;;;;;;;:::i;1661:108:60:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1661:108:60;-1:-1:-1;;;;;1661:108:60;;:::i;1898:107:26:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1898:107:26;;;;;;;;:::i;838:85:61:-;;;:::i;4392:213:60:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4392:213:60;;;;;;;;:::i;1972:153::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1972:153:60;;;;;;;;:::i;2340:250:43:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2340:250:43;;:::i;3004:391:26:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;3004:391:26;;;;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;3004:391:26;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3004:391:26;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3004:391:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;3004:391:26;;-1:-1:-1;3004:391:26;;-1:-1:-1;;;;;3004:391:26:i;2183:132:60:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2183:132:60;;;;;;;;;;:::i;1629:228:43:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1629:228:43;;;;;;;;:::i;644:81:61:-;713:5;706:12;;;;;;;;-1:-1:-1;;706:12:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;681:13;;706:12;;713:5;;706:12;;713:5;706:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;644:81;:::o;2453:145:60:-;2518:4;2534:36;2543:10;2555:7;2564:5;2534:8;:36::i;:::-;-1:-1:-1;2587:4:60;2453:145;;;;:::o;1514:89::-;1584:12;;1514:89;:::o;3055:252::-;3144:4;3160:36;3170:6;3178:9;3189:6;3160:9;:36::i;:::-;-1:-1:-1;;;;;3235:19:60;;;;;;:11;:19;;;;;;;;3223:10;3235:31;;;;;;;;;3206:73;;3215:6;;3235:43;;3271:6;3235:43;:35;:43;:::i;:::-;3206:8;:73::i;:::-;-1:-1:-1;3296:4:60;3055:252;;;;;;:::o;1478:81:61:-;1543:9;;;;1478:81;:::o;3702:203:60:-;3807:10;3782:4;3828:23;;;:11;:23;;;;;;;;-1:-1:-1;;;;;3828:32:60;;;;;;;;;;3782:4;;3798:79;;3819:7;;3828:48;;3865:10;3828:48;:36;:48;:::i;2838:293:43:-;2920:24;2947:31;2957:10;2969:8;2947:9;:31::i;:::-;2920:58;-1:-1:-1;2992:20:43;;2988:95;;3027:45;3045:8;3055:16;3027:17;:45::i;:::-;;2988:95;3092:32;3100:8;3110:13;3092:7;:32::i;:::-;;2838:293;;;:::o;1188:345:26:-;619:14:28;;1274:4:26;;-1:-1:-1;;;;;619:14:28;605:10;:28;597:75;;;;-1:-1:-1;;;597:75:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1481:24:26;1487:8;1497:7;1481:5;:24::i;2169:83::-;2219:26;2225:10;2237:7;2219:5;:26::i;:::-;2169:83;:::o;2007:183:43:-;2047:22;2072:21;2082:10;2072:9;:21::i;:::-;2047:46;-1:-1:-1;2107:18:43;;2103:81;;2140:33;2146:10;2158:14;2140:5;:33::i;876:204::-;946:4;1028:24;1034:8;1044:7;1028:5;:24::i;1661:108:60:-;-1:-1:-1;;;;;1744:18:60;1718:7;1744:18;;;:9;:18;;;;;;;1661:108::o;1898:107:26:-;1970:28;1980:8;1990:7;1970:9;:28::i;:::-;1898:107;;:::o;838:85:61:-;909:7;902:14;;;;;;;;-1:-1:-1;;902:14:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;877:13;;902:14;;909:7;;902:14;;909:7;902:14;;;;;;;;;;;;;;;;;;;;;;;;4392:213:60;4502:10;4477:4;4523:23;;;:11;:23;;;;;;;;-1:-1:-1;;;;;4523:32:60;;;;;;;;;;4477:4;;4493:84;;4514:7;;4523:53;;4560:15;4523:53;:36;:53;:::i;1972:153::-;2041:4;2057:40;2067:10;2079:9;2090:6;2057:9;:40::i;2340:250:43:-;2400:22;2425:21;2435:10;2425:9;:21::i;:::-;2400:46;-1:-1:-1;2459:18:43;;2456:84;;2492:37;2502:10;2514:14;2492:9;:37::i;:::-;2549:34;2559:10;2571:11;2549:9;:34::i;:::-;;2340:250;;:::o;3004:391:26:-;3141:4;3210:34;3226:8;3237:6;3210:7;:34::i;:::-;3206:161;;;3260:71;;-1:-1:-1;;;3260:71:26;;3285:10;3260:71;;;;;;;;;;;;3313:4;3260:71;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3260:24:26;;;;;3285:10;3297:6;;3313:4;3320:10;;3260:71;;;;;;;;;;;;;;;;-1:-1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;3260:71:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3260:71:26;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3260:71:26;;;;3352:4;3345:11;;;;3206:161;-1:-1:-1;3383:5:26;3004:391;;;;;:::o;2183:132:60:-;-1:-1:-1;;;;;2281:18:60;;;2255:7;2281:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;2183:132::o;1629:228:43:-;1826:24;1832:8;1842:7;1826:5;:24::i;7117:329:60:-;-1:-1:-1;;;;;7209:19:60;;7201:68;;;;-1:-1:-1;;;7201:68:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7287:21:60;;7279:68;;;;-1:-1:-1;;;7279:68:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7358:18:60;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:35;;;7408:31;;;;;;;;;;;;;;;;;7117:329;;;:::o;5079:422::-;-1:-1:-1;;;;;5176:20:60;;5168:70;;;;-1:-1:-1;;;5168:70:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5256:23:60;;5248:71;;;;-1:-1:-1;;;5248:71:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5350:17:60;;;;;;:9;:17;;;;;;:29;;5372:6;5350:29;:21;:29;:::i;:::-;-1:-1:-1;;;;;5330:17:60;;;;;;;:9;:17;;;;;;:49;;;;5412:20;;;;;;;:32;;5437:6;5412:32;:24;:32;:::i;:::-;-1:-1:-1;;;;;5389:20:60;;;;;;;:9;:20;;;;;;;;;:55;;;;5459:35;;;;;;;5389:20;;5459:35;;;;;;;;;;;;;5079:422;;;:::o;1274:179:58:-;1332:7;1364:1;1359;:6;;1351:49;;;;;-1:-1:-1;;;1351:49:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1422:5:58;;;1274:179::o;834:176::-;892:7;923:5;;;946:6;;;;938:46;;;;;-1:-1:-1;;;938:46:58;;;;;;;;;;;;;;;;;;;;;;;;;;;5771:302:60;-1:-1:-1;;;;;5846:21:60;;5838:65;;;;;-1:-1:-1;;;5838:65:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;5929:12;;:24;;5946:6;5929:24;:16;:24;:::i;:::-;5914:12;:39;-1:-1:-1;;;;;5984:18:60;;;;;;:9;:18;;;;;;:30;;6007:6;5984:30;:22;:30;:::i;:::-;-1:-1:-1;;;;;5963:18:60;;;;;;:9;:18;;;;;;;;:51;;;;6029:37;;;;;;;5963:18;;;;6029:37;;;;;;;;;;5771:302;;:::o;6392:300::-;-1:-1:-1;;;;;6466:21:60;;6458:67;;;;-1:-1:-1;;;6458:67:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6551:12;;:23;;6568:5;6551:23;:16;:23;:::i;:::-;6536:12;:38;-1:-1:-1;;;;;6605:18:60;;;;;;:9;:18;;;;;;:29;;6628:5;6605:29;:22;:29;:::i;:::-;-1:-1:-1;;;;;6584:18:60;;;;;;:9;:18;;;;;;;;:50;;;;6649:36;;;;;;;6584:18;;6649:36;;;;;;;;;;;6392:300;;:::o;7623:185::-;7694:22;7700:7;7709:6;7694:5;:22::i;:::-;-1:-1:-1;;;;;7756:20:60;;;;;;:11;:20;;;;;;;;7744:10;7756:32;;;;;;;;;7726:75;;7735:7;;7756:44;;7793:6;7756:44;:36;:44;:::i",
  "source": "pragma solidity 0.5.17;\n\nimport \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\";\nimport \"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol\";\nimport \"../../../contracts/system/TBTCToken.sol\";\n\ncontract TestTBTCToken is TBTCToken{\n\n    constructor(address _vendingMachine)\n        TBTCToken(_vendingMachine)\n    public {\n        // solium-disable-previous-line no-empty-blocks\n    }\n\n    /// @dev             We can't call TBTCToken mint function from deposit Test becuase of ACL.\n    ///                  This function bypasses ACL and can be called in Deposit tests\n    ///                  Mints an amount of the token and assigns it to an account.\n    ///                  Uses the internal _mint function.\n    /// @param _account  The account that will receive the created tokens.\n    /// @param _amount   The amount of tokens that will be created.\n    function forceMint(address _account, uint256 _amount) public returns (bool){\n        // NOTE: this is a public function with unchecked minting.\n        _mint(_account, _amount);\n        return true;\n    }\n\n    /// @dev             We can't call TBTCToken burn function from deposit Test becuase of ACL.\n    ///                  This function bypasses ACL and can be called in Deposit tests.\n    ///                  Burns an amount of the token of a given account\n    ///                  deducting from the sender's allowance for said account.\n    ///                  Bypasses ACL and can be called in Deposit tests\n    /// @param _account  The account whose tokens will be burnt.\n    /// @param _amount   The amount of tokens that will be burnt.\n    function forceBurn(address _account, uint256 _amount) public {\n        // NOTE: this uses internal function _burn instead of _burnFrom.\n        // This will bypass allowance check for now.\n        _burn(_account, _amount);\n    }\n\n    /// @dev                Zeros out the balance of the calling address.\n    ///                     Does nothing if address has zero balance.\n    function zeroBalance() public {\n        uint256 currentBalance = balanceOf(msg.sender);\n        if (currentBalance > 0){\n            _burn(msg.sender, currentBalance);\n        }\n    }\n\n    /// @dev                Uses exposed token functions to reset caller's balance.\n    /// @param _newBalance  New balance to assign to caller\n    function resetBalance(uint256 _newBalance) public {\n        uint256 currentBalance = balanceOf(msg.sender);\n        if(currentBalance > 0){\n            forceBurn(msg.sender, currentBalance);\n        }\n        forceMint(msg.sender, _newBalance);\n    }\n\n    /// @dev                   Uses exposed token functions to reset the allowance\n    ///                        of a given account.\n    /// @param _spender        The allowed account.\n    /// @param _newAllowance   New allowance to assign.\n    function resetAllowance(address _spender, uint256 _newAllowance) public {\n        uint256 currentAllowance = allowance(msg.sender, _spender);\n        if (currentAllowance > 0){\n            decreaseAllowance(_spender, currentAllowance);\n        }\n        approve(_spender, _newAllowance);\n    }\n}\n",
  "sourcePath": "/home/kowal/Projects/sovryn/tbtc/solidity/contracts/test/system/TestTBTCToken.sol",
  "ast": {
    "absolutePath": "/home/kowal/Projects/sovryn/tbtc/solidity/contracts/test/system/TestTBTCToken.sol",
    "exportedSymbols": {
      "TestTBTCToken": [
        11063
      ]
    },
    "id": 11064,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10935,
        "literals": [
          "solidity",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:43"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "id": 10936,
        "nodeType": "ImportDirective",
        "scope": 11064,
        "sourceUnit": 17051,
        "src": "25:63:43",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol",
        "id": 10937,
        "nodeType": "ImportDirective",
        "scope": 11064,
        "sourceUnit": 17109,
        "src": "89:71:43",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/kowal/Projects/sovryn/tbtc/solidity/contracts/system/TBTCToken.sol",
        "file": "../../../contracts/system/TBTCToken.sol",
        "id": 10938,
        "nodeType": "ImportDirective",
        "scope": 11064,
        "sourceUnit": 8323,
        "src": "161:49:43",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10939,
              "name": "TBTCToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8322,
              "src": "238:9:43",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TBTCToken_$8322",
                "typeString": "contract TBTCToken"
              }
            },
            "id": 10940,
            "nodeType": "InheritanceSpecifier",
            "src": "238:9:43"
          }
        ],
        "contractDependencies": [
          8322,
          8911,
          17050,
          17108,
          17177
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 11063,
        "linearizedBaseContracts": [
          11063,
          8322,
          8911,
          17050,
          17108,
          17177
        ],
        "name": "TestTBTCToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 10948,
              "nodeType": "Block",
              "src": "337:63:43",
              "statements": []
            },
            "documentation": null,
            "id": 10949,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 10945,
                    "name": "_vendingMachine",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10942,
                    "src": "309:15:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 10946,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 10944,
                  "name": "TBTCToken",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8322,
                  "src": "299:9:43",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_TBTCToken_$8322_$",
                    "typeString": "type(contract TBTCToken)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "299:26:43"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10943,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10942,
                  "name": "_vendingMachine",
                  "nodeType": "VariableDeclaration",
                  "scope": 10949,
                  "src": "266:23:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10941,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "266:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "265:25:43"
            },
            "returnParameters": {
              "id": 10947,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "337:0:43"
            },
            "scope": 11063,
            "src": "254:146:43",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10965,
              "nodeType": "Block",
              "src": "951:129:43",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 10959,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10951,
                        "src": "1034:8:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 10960,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10953,
                        "src": "1044:7:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10958,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16936,
                      "src": "1028:5:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 10961,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1028:24:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10962,
                  "nodeType": "ExpressionStatement",
                  "src": "1028:24:43"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 10963,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1069:4:43",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 10957,
                  "id": 10964,
                  "nodeType": "Return",
                  "src": "1062:11:43"
                }
              ]
            },
            "documentation": "@dev             We can't call TBTCToken mint function from deposit Test becuase of ACL.\n                  This function bypasses ACL and can be called in Deposit tests\n                  Mints an amount of the token and assigns it to an account.\n                  Uses the internal _mint function.\n @param _account  The account that will receive the created tokens.\n @param _amount   The amount of tokens that will be created.",
            "id": 10966,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "forceMint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10954,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10951,
                  "name": "_account",
                  "nodeType": "VariableDeclaration",
                  "scope": 10966,
                  "src": "895:16:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10950,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "895:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10953,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 10966,
                  "src": "913:15:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10952,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "913:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "894:35:43"
            },
            "returnParameters": {
              "id": 10957,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10956,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 10966,
                  "src": "946:4:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10955,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "946:4:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "945:6:43"
            },
            "scope": 11063,
            "src": "876:204:43",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10978,
              "nodeType": "Block",
              "src": "1690:167:43",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 10974,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10968,
                        "src": "1832:8:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 10975,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10970,
                        "src": "1842:7:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10973,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16979,
                      "src": "1826:5:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 10976,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1826:24:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10977,
                  "nodeType": "ExpressionStatement",
                  "src": "1826:24:43"
                }
              ]
            },
            "documentation": "@dev             We can't call TBTCToken burn function from deposit Test becuase of ACL.\n                  This function bypasses ACL and can be called in Deposit tests.\n                  Burns an amount of the token of a given account\n                  deducting from the sender's allowance for said account.\n                  Bypasses ACL and can be called in Deposit tests\n @param _account  The account whose tokens will be burnt.\n @param _amount   The amount of tokens that will be burnt.",
            "id": 10979,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "forceBurn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10971,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10968,
                  "name": "_account",
                  "nodeType": "VariableDeclaration",
                  "scope": 10979,
                  "src": "1648:16:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10967,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1648:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10970,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 10979,
                  "src": "1666:15:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10969,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1666:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1647:35:43"
            },
            "returnParameters": {
              "id": 10972,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1690:0:43"
            },
            "scope": 11063,
            "src": "1629:228:43",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11000,
              "nodeType": "Block",
              "src": "2037:153:43",
              "statements": [
                {
                  "assignments": [
                    10983
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10983,
                      "name": "currentBalance",
                      "nodeType": "VariableDeclaration",
                      "scope": 11000,
                      "src": "2047:22:43",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10982,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2047:7:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 10988,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 10985,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18047,
                          "src": "2082:3:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10986,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2082:10:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 10984,
                      "name": "balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16694,
                      "src": "2072:9:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 10987,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2072:21:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2047:46:43"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 10991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 10989,
                      "name": "currentBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10983,
                      "src": "2107:14:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 10990,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2124:1:43",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2107:18:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 10999,
                  "nodeType": "IfStatement",
                  "src": "2103:81:43",
                  "trueBody": {
                    "id": 10998,
                    "nodeType": "Block",
                    "src": "2126:58:43",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 10993,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 18047,
                                "src": "2146:3:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 10994,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "2146:10:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 10995,
                              "name": "currentBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10983,
                              "src": "2158:14:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 10992,
                            "name": "_burn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16979,
                            "src": "2140:5:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 10996,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2140:33:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10997,
                        "nodeType": "ExpressionStatement",
                        "src": "2140:33:43"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@dev                Zeros out the balance of the calling address.\n                     Does nothing if address has zero balance.",
            "id": 11001,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "zeroBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10980,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2027:2:43"
            },
            "returnParameters": {
              "id": 10981,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2037:0:43"
            },
            "scope": 11063,
            "src": "2007:183:43",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11030,
              "nodeType": "Block",
              "src": "2390:200:43",
              "statements": [
                {
                  "assignments": [
                    11007
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11007,
                      "name": "currentBalance",
                      "nodeType": "VariableDeclaration",
                      "scope": 11030,
                      "src": "2400:22:43",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 11006,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2400:7:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 11012,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 11009,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18047,
                          "src": "2435:3:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 11010,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2435:10:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 11008,
                      "name": "balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16694,
                      "src": "2425:9:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 11011,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2425:21:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2400:46:43"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 11015,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 11013,
                      "name": "currentBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11007,
                      "src": "2459:14:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 11014,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2476:1:43",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2459:18:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 11023,
                  "nodeType": "IfStatement",
                  "src": "2456:84:43",
                  "trueBody": {
                    "id": 11022,
                    "nodeType": "Block",
                    "src": "2478:62:43",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 11017,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 18047,
                                "src": "2502:3:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 11018,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "2502:10:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 11019,
                              "name": "currentBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11007,
                              "src": "2514:14:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 11016,
                            "name": "forceBurn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10979,
                            "src": "2492:9:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 11020,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2492:37:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 11021,
                        "nodeType": "ExpressionStatement",
                        "src": "2492:37:43"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 11025,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18047,
                          "src": "2559:3:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 11026,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2559:10:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 11027,
                        "name": "_newBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11003,
                        "src": "2571:11:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 11024,
                      "name": "forceMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10966,
                      "src": "2549:9:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 11028,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2549:34:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11029,
                  "nodeType": "ExpressionStatement",
                  "src": "2549:34:43"
                }
              ]
            },
            "documentation": "@dev                Uses exposed token functions to reset caller's balance.\n @param _newBalance  New balance to assign to caller",
            "id": 11031,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "resetBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11004,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11003,
                  "name": "_newBalance",
                  "nodeType": "VariableDeclaration",
                  "scope": 11031,
                  "src": "2362:19:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11002,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2362:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2361:21:43"
            },
            "returnParameters": {
              "id": 11005,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2390:0:43"
            },
            "scope": 11063,
            "src": "2340:250:43",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11061,
              "nodeType": "Block",
              "src": "2910:221:43",
              "statements": [
                {
                  "assignments": [
                    11039
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11039,
                      "name": "currentAllowance",
                      "nodeType": "VariableDeclaration",
                      "scope": 11061,
                      "src": "2920:24:43",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 11038,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2920:7:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 11045,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 11041,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18047,
                          "src": "2957:3:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 11042,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2957:10:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 11043,
                        "name": "_spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11033,
                        "src": "2969:8:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 11040,
                      "name": "allowance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16729,
                      "src": "2947:9:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) view returns (uint256)"
                      }
                    },
                    "id": 11044,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2947:31:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2920:58:43"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 11048,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 11046,
                      "name": "currentAllowance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11039,
                      "src": "2992:16:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 11047,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3011:1:43",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2992:20:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 11055,
                  "nodeType": "IfStatement",
                  "src": "2988:95:43",
                  "trueBody": {
                    "id": 11054,
                    "nodeType": "Block",
                    "src": "3013:70:43",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 11050,
                              "name": "_spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11033,
                              "src": "3045:8:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 11051,
                              "name": "currentAllowance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11039,
                              "src": "3055:16:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 11049,
                            "name": "decreaseAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16837,
                            "src": "3027:17:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) returns (bool)"
                            }
                          },
                          "id": 11052,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3027:45:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 11053,
                        "nodeType": "ExpressionStatement",
                        "src": "3027:45:43"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 11057,
                        "name": "_spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11033,
                        "src": "3100:8:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 11058,
                        "name": "_newAllowance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11035,
                        "src": "3110:13:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 11056,
                      "name": "approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16748,
                      "src": "3092:7:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 11059,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3092:32:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11060,
                  "nodeType": "ExpressionStatement",
                  "src": "3092:32:43"
                }
              ]
            },
            "documentation": "@dev                   Uses exposed token functions to reset the allowance\n                        of a given account.\n @param _spender        The allowed account.\n @param _newAllowance   New allowance to assign.",
            "id": 11062,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "resetAllowance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11036,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11033,
                  "name": "_spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 11062,
                  "src": "2862:16:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11032,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2862:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11035,
                  "name": "_newAllowance",
                  "nodeType": "VariableDeclaration",
                  "scope": 11062,
                  "src": "2880:21:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11034,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2880:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2861:41:43"
            },
            "returnParameters": {
              "id": 11037,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2910:0:43"
            },
            "scope": 11063,
            "src": "2838:293:43",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 11064,
        "src": "212:2921:43"
      }
    ],
    "src": "0:3134:43"
  },
  "legacyAST": {
    "absolutePath": "/home/kowal/Projects/sovryn/tbtc/solidity/contracts/test/system/TestTBTCToken.sol",
    "exportedSymbols": {
      "TestTBTCToken": [
        11063
      ]
    },
    "id": 11064,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10935,
        "literals": [
          "solidity",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:43"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "id": 10936,
        "nodeType": "ImportDirective",
        "scope": 11064,
        "sourceUnit": 17051,
        "src": "25:63:43",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol",
        "id": 10937,
        "nodeType": "ImportDirective",
        "scope": 11064,
        "sourceUnit": 17109,
        "src": "89:71:43",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/kowal/Projects/sovryn/tbtc/solidity/contracts/system/TBTCToken.sol",
        "file": "../../../contracts/system/TBTCToken.sol",
        "id": 10938,
        "nodeType": "ImportDirective",
        "scope": 11064,
        "sourceUnit": 8323,
        "src": "161:49:43",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10939,
              "name": "TBTCToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8322,
              "src": "238:9:43",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TBTCToken_$8322",
                "typeString": "contract TBTCToken"
              }
            },
            "id": 10940,
            "nodeType": "InheritanceSpecifier",
            "src": "238:9:43"
          }
        ],
        "contractDependencies": [
          8322,
          8911,
          17050,
          17108,
          17177
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 11063,
        "linearizedBaseContracts": [
          11063,
          8322,
          8911,
          17050,
          17108,
          17177
        ],
        "name": "TestTBTCToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 10948,
              "nodeType": "Block",
              "src": "337:63:43",
              "statements": []
            },
            "documentation": null,
            "id": 10949,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 10945,
                    "name": "_vendingMachine",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10942,
                    "src": "309:15:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 10946,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 10944,
                  "name": "TBTCToken",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8322,
                  "src": "299:9:43",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_TBTCToken_$8322_$",
                    "typeString": "type(contract TBTCToken)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "299:26:43"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10943,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10942,
                  "name": "_vendingMachine",
                  "nodeType": "VariableDeclaration",
                  "scope": 10949,
                  "src": "266:23:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10941,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "266:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "265:25:43"
            },
            "returnParameters": {
              "id": 10947,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "337:0:43"
            },
            "scope": 11063,
            "src": "254:146:43",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10965,
              "nodeType": "Block",
              "src": "951:129:43",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 10959,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10951,
                        "src": "1034:8:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 10960,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10953,
                        "src": "1044:7:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10958,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16936,
                      "src": "1028:5:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 10961,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1028:24:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10962,
                  "nodeType": "ExpressionStatement",
                  "src": "1028:24:43"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 10963,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1069:4:43",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 10957,
                  "id": 10964,
                  "nodeType": "Return",
                  "src": "1062:11:43"
                }
              ]
            },
            "documentation": "@dev             We can't call TBTCToken mint function from deposit Test becuase of ACL.\n                  This function bypasses ACL and can be called in Deposit tests\n                  Mints an amount of the token and assigns it to an account.\n                  Uses the internal _mint function.\n @param _account  The account that will receive the created tokens.\n @param _amount   The amount of tokens that will be created.",
            "id": 10966,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "forceMint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10954,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10951,
                  "name": "_account",
                  "nodeType": "VariableDeclaration",
                  "scope": 10966,
                  "src": "895:16:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10950,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "895:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10953,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 10966,
                  "src": "913:15:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10952,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "913:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "894:35:43"
            },
            "returnParameters": {
              "id": 10957,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10956,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 10966,
                  "src": "946:4:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10955,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "946:4:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "945:6:43"
            },
            "scope": 11063,
            "src": "876:204:43",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10978,
              "nodeType": "Block",
              "src": "1690:167:43",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 10974,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10968,
                        "src": "1832:8:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 10975,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10970,
                        "src": "1842:7:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10973,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16979,
                      "src": "1826:5:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 10976,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1826:24:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10977,
                  "nodeType": "ExpressionStatement",
                  "src": "1826:24:43"
                }
              ]
            },
            "documentation": "@dev             We can't call TBTCToken burn function from deposit Test becuase of ACL.\n                  This function bypasses ACL and can be called in Deposit tests.\n                  Burns an amount of the token of a given account\n                  deducting from the sender's allowance for said account.\n                  Bypasses ACL and can be called in Deposit tests\n @param _account  The account whose tokens will be burnt.\n @param _amount   The amount of tokens that will be burnt.",
            "id": 10979,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "forceBurn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10971,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10968,
                  "name": "_account",
                  "nodeType": "VariableDeclaration",
                  "scope": 10979,
                  "src": "1648:16:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10967,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1648:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10970,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 10979,
                  "src": "1666:15:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10969,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1666:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1647:35:43"
            },
            "returnParameters": {
              "id": 10972,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1690:0:43"
            },
            "scope": 11063,
            "src": "1629:228:43",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11000,
              "nodeType": "Block",
              "src": "2037:153:43",
              "statements": [
                {
                  "assignments": [
                    10983
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10983,
                      "name": "currentBalance",
                      "nodeType": "VariableDeclaration",
                      "scope": 11000,
                      "src": "2047:22:43",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10982,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2047:7:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 10988,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 10985,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18047,
                          "src": "2082:3:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10986,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2082:10:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 10984,
                      "name": "balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16694,
                      "src": "2072:9:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 10987,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2072:21:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2047:46:43"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 10991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 10989,
                      "name": "currentBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10983,
                      "src": "2107:14:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 10990,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2124:1:43",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2107:18:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 10999,
                  "nodeType": "IfStatement",
                  "src": "2103:81:43",
                  "trueBody": {
                    "id": 10998,
                    "nodeType": "Block",
                    "src": "2126:58:43",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 10993,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 18047,
                                "src": "2146:3:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 10994,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "2146:10:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 10995,
                              "name": "currentBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10983,
                              "src": "2158:14:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 10992,
                            "name": "_burn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16979,
                            "src": "2140:5:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 10996,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2140:33:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10997,
                        "nodeType": "ExpressionStatement",
                        "src": "2140:33:43"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@dev                Zeros out the balance of the calling address.\n                     Does nothing if address has zero balance.",
            "id": 11001,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "zeroBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10980,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2027:2:43"
            },
            "returnParameters": {
              "id": 10981,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2037:0:43"
            },
            "scope": 11063,
            "src": "2007:183:43",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11030,
              "nodeType": "Block",
              "src": "2390:200:43",
              "statements": [
                {
                  "assignments": [
                    11007
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11007,
                      "name": "currentBalance",
                      "nodeType": "VariableDeclaration",
                      "scope": 11030,
                      "src": "2400:22:43",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 11006,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2400:7:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 11012,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 11009,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18047,
                          "src": "2435:3:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 11010,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2435:10:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 11008,
                      "name": "balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16694,
                      "src": "2425:9:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 11011,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2425:21:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2400:46:43"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 11015,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 11013,
                      "name": "currentBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11007,
                      "src": "2459:14:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 11014,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2476:1:43",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2459:18:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 11023,
                  "nodeType": "IfStatement",
                  "src": "2456:84:43",
                  "trueBody": {
                    "id": 11022,
                    "nodeType": "Block",
                    "src": "2478:62:43",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 11017,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 18047,
                                "src": "2502:3:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 11018,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "2502:10:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 11019,
                              "name": "currentBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11007,
                              "src": "2514:14:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 11016,
                            "name": "forceBurn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10979,
                            "src": "2492:9:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 11020,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2492:37:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 11021,
                        "nodeType": "ExpressionStatement",
                        "src": "2492:37:43"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 11025,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18047,
                          "src": "2559:3:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 11026,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2559:10:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 11027,
                        "name": "_newBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11003,
                        "src": "2571:11:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 11024,
                      "name": "forceMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10966,
                      "src": "2549:9:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 11028,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2549:34:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11029,
                  "nodeType": "ExpressionStatement",
                  "src": "2549:34:43"
                }
              ]
            },
            "documentation": "@dev                Uses exposed token functions to reset caller's balance.\n @param _newBalance  New balance to assign to caller",
            "id": 11031,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "resetBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11004,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11003,
                  "name": "_newBalance",
                  "nodeType": "VariableDeclaration",
                  "scope": 11031,
                  "src": "2362:19:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11002,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2362:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2361:21:43"
            },
            "returnParameters": {
              "id": 11005,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2390:0:43"
            },
            "scope": 11063,
            "src": "2340:250:43",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11061,
              "nodeType": "Block",
              "src": "2910:221:43",
              "statements": [
                {
                  "assignments": [
                    11039
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11039,
                      "name": "currentAllowance",
                      "nodeType": "VariableDeclaration",
                      "scope": 11061,
                      "src": "2920:24:43",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 11038,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2920:7:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 11045,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 11041,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18047,
                          "src": "2957:3:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 11042,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2957:10:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 11043,
                        "name": "_spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11033,
                        "src": "2969:8:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 11040,
                      "name": "allowance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16729,
                      "src": "2947:9:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) view returns (uint256)"
                      }
                    },
                    "id": 11044,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2947:31:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2920:58:43"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 11048,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 11046,
                      "name": "currentAllowance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11039,
                      "src": "2992:16:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 11047,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3011:1:43",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2992:20:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 11055,
                  "nodeType": "IfStatement",
                  "src": "2988:95:43",
                  "trueBody": {
                    "id": 11054,
                    "nodeType": "Block",
                    "src": "3013:70:43",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 11050,
                              "name": "_spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11033,
                              "src": "3045:8:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 11051,
                              "name": "currentAllowance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11039,
                              "src": "3055:16:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 11049,
                            "name": "decreaseAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16837,
                            "src": "3027:17:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) returns (bool)"
                            }
                          },
                          "id": 11052,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3027:45:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 11053,
                        "nodeType": "ExpressionStatement",
                        "src": "3027:45:43"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 11057,
                        "name": "_spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11033,
                        "src": "3100:8:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 11058,
                        "name": "_newAllowance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11035,
                        "src": "3110:13:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 11056,
                      "name": "approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16748,
                      "src": "3092:7:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 11059,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3092:32:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11060,
                  "nodeType": "ExpressionStatement",
                  "src": "3092:32:43"
                }
              ]
            },
            "documentation": "@dev                   Uses exposed token functions to reset the allowance\n                        of a given account.\n @param _spender        The allowed account.\n @param _newAllowance   New allowance to assign.",
            "id": 11062,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "resetAllowance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11036,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11033,
                  "name": "_spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 11062,
                  "src": "2862:16:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11032,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2862:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11035,
                  "name": "_newAllowance",
                  "nodeType": "VariableDeclaration",
                  "scope": 11062,
                  "src": "2880:21:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11034,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2880:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2861:41:43"
            },
            "returnParameters": {
              "id": 11037,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2910:0:43"
            },
            "scope": 11063,
            "src": "2838:293:43",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 11064,
        "src": "212:2921:43"
      }
    ],
    "src": "0:3134:43"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.17+commit.d19bba13.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.23",
  "updatedAt": "2021-02-01T14:28:06.560Z",
  "devdoc": {
    "methods": {
      "allowance(address,address)": {
        "details": "See `IERC20.allowance`."
      },
      "approve(address,uint256)": {
        "details": "See `IERC20.approve`.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "approveAndCall(address,uint256,bytes)": {
        "details": "The `_spender` should implement the `ITokenRecipient`                   interface to receive approval notifications.",
        "params": {
          "_extraData": "Extra information to send to the approved contract.",
          "_spender": "Address of contract authorized to spend.",
          "_value": "The max amount they can spend."
        },
        "return": "true if the `_spender` was successfully approved and acted on         the approval, false (or revert) otherwise."
      },
      "balanceOf(address)": {
        "details": "See `IERC20.balanceOf`."
      },
      "burn(uint256)": {
        "details": "Destroys `amount` tokens from `msg.sender`, reducing the total supply.",
        "params": {
          "_amount": "The amount of tokens that will be burnt."
        }
      },
      "burnFrom(address,uint256)": {
        "details": "Burns an amount of the token from the given account's balance.                  deducting from the sender's allowance for said account.                  Uses the internal _burn function.",
        "params": {
          "_account": "The account whose tokens will be burnt.",
          "_amount": "The amount of tokens that will be burnt."
        }
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.     * > Note that this information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including `IERC20.balanceOf` and `IERC20.transfer`."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "forceBurn(address,uint256)": {
        "details": "We can't call TBTCToken burn function from deposit Test becuase of ACL.                  This function bypasses ACL and can be called in Deposit tests.                  Burns an amount of the token of a given account                  deducting from the sender's allowance for said account.                  Bypasses ACL and can be called in Deposit tests",
        "params": {
          "_account": "The account whose tokens will be burnt.",
          "_amount": "The amount of tokens that will be burnt."
        }
      },
      "forceMint(address,uint256)": {
        "details": "We can't call TBTCToken mint function from deposit Test becuase of ACL.                  This function bypasses ACL and can be called in Deposit tests                  Mints an amount of the token and assigns it to an account.                  Uses the internal _mint function.",
        "params": {
          "_account": "The account that will receive the created tokens.",
          "_amount": "The amount of tokens that will be created."
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "mint(address,uint256)": {
        "details": "Mints an amount of the token and assigns it to an account.                  Uses the internal _mint function.",
        "params": {
          "_account": "The account that will receive the created tokens.",
          "_amount": "The amount of tokens that will be created."
        }
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "resetAllowance(address,uint256)": {
        "details": "Uses exposed token functions to reset the allowance                        of a given account.",
        "params": {
          "_newAllowance": "New allowance to assign.",
          "_spender": "The allowed account."
        }
      },
      "resetBalance(uint256)": {
        "details": "Uses exposed token functions to reset caller's balance.",
        "params": {
          "_newBalance": "New balance to assign to caller"
        }
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See `IERC20.totalSupply`."
      },
      "transfer(address,uint256)": {
        "details": "See `IERC20.transfer`.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See `IERC20.transferFrom`.     * Emits an `Approval` event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of `ERC20`;     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `value`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
      },
      "zeroBalance()": {
        "details": "Zeros out the balance of the calling address.                     Does nothing if address has zero balance."
      }
    }
  },
  "userdoc": {
    "methods": {
      "approveAndCall(address,uint256,bytes)": {
        "notice": "Set allowance for other address and notify.                   Allows `_spender` to spend no more than `_value`                   tokens on your behalf and then ping the contract about                   it."
      }
    }
  }
}